apiVersion: apps/v1
kind: Deployment
metadata:
  name: chirpstack
  namespace: chirpstack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chirpstack
  template:
    metadata:
      labels:
        app: chirpstack
        security-group: db-access
    spec:
      containers:
        - name: chirpstack
          image: {{ .Values.chirpstack.image.repository }}:{{ .Values.chirpstack.image.tag }}
          imagePullPolicy: IfNotPresent
          command: ["/usr/bin/chirpstack"]
          args: ["--config", "/etc/chirpstack"]
          ports:
            - name: dashboard
              containerPort: 8080
              protocol: TCP
            - containerPort: 8081
              name: prometheus
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          env:
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chirpstack-secrets
                  key: POSTGRESQL_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chirpstack-secrets
                  key: REDIS_PASSWORD
            - name: CHIRPSTACK_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: chirpstack-secrets
                  key: CHIRPSTACK_API_SECRET
            - name: REDIS_HOST
              value: {{ .Values.chirpstack.redisHost }}
            - name: POSTGRESQL_HOST
              value: {{ .Values.chirpstack.postgresHost }}
            - name: MQTT_BROKER_HOST
              value: mqtt-internal
          volumeMounts:
            - name: chirpstack
              mountPath: /etc/chirpstack/
      restartPolicy: Always
      volumes:
        - name: chirpstack
          configMap:
            name: chirpstack
